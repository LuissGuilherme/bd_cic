CREATE TABLE clientes (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    telefone VARCHAR(20),
    endereco TEXT
);

CREATE TABLE produtos (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10,2) NOT NULL,
    estoque INTEGER NOT NULL
);

CREATE TABLE pedidos (
    id SERIAL PRIMARY KEY,
    cliente_id INTEGER REFERENCES clientes(id),
    produto_id INTEGER REFERENCES produtos(id),
    quantidade INTEGER NOT NULL,
    data_pedido DATE NOT NULL
);

-- Inserindo registros na tabela clientes
INSERT INTO clientes (nome, email, telefone, endereco) VALUES
('João Silva', 'joao@email.com', '1111-1111', 'Rua A, 123'),
('Maria Souza', 'maria@email.com', '2222-2222', 'Rua B, 456'),
('Carlos Pereira', 'carlos@email.com', '3333-3333', 'Rua C, 789'),
('Ana Lima', 'ana@email.com', NULL, 'Rua D, 321'),
('Bruno Castro', 'bruno@email.com', '5555-5555', 'Rua E, 654'),
('Fernando Alves', 'fernando@email.com', NULL, NULL),
('Tatiane Mendes', 'tatiane@email.com', '7777-7777', 'Rua G, 987'),
('Diego Moreira', 'diego@email.com', '8888-8888', 'Rua H, 147'),
('Larissa Rocha', 'larissa@email.com', NULL, 'Rua I, 258'),
('Pedro Nogueira', 'pedro@email.com', '1010-1010', 'Rua J, 369');

-- Inserindo registros na tabela produtos
INSERT INTO produtos (nome, descricao, preco, estoque) VALUES
('Notebook Dell', 'Core i7, 16GB RAM, SSD 512GB', 4500.00, 20),
('Smartphone Samsung', '128GB, Tela 6.4"', 2500.00, 30),
('Fone Bluetooth', 'Cancelamento de ruído', 500.00, 50),
('Monitor LG', 'Full HD, 24 polegadas', 800.00, 25),
('Teclado Mecânico', 'RGB, Switch Red', 350.00, 40),
('Mouse Gamer', '16000 DPI, RGB', 250.00, 35),
('Impressora HP', 'Multifuncional Wi-Fi', 1200.00, 15),
('Cadeira Gamer', 'Reclinável, Preto/Vermelho', 950.00, 10),
('Microfone Condensador', 'USB, Profissional', 400.00, 12),
('Webcam Full HD', '1080p, Autofoco', 300.00, 18);

-- Inserindo registros na tabela pedidos
INSERT INTO pedidos (cliente_id, produto_id, quantidade, data_pedido) VALUES
(1, 1, 2, '2025-03-01'),
(2, 3, 1, '2025-03-02'),
(3, 5, 1, '2025-03-03'),
(4, 7, 3, '2025-03-04'),
(5, 9, 2, '2025-03-05'),
(NULL, 2, 1, '2025-03-06'), -- Pedido sem cliente associado
(7, NULL, 1, '2025-03-07'), -- Pedido sem produto associado
(8, 4, 2, '2025-03-08'),
(9, 6, 1, '2025-03-09'),
(10, 8, 1, '2025-03-10');

-- Questões/Prática para a prova 

-- Contar o número total de clientes

select count(*) from clientes;

-- Contar o número total de pedidos

select count(*) from pedidos;

--  Calcular o valor total de todos os pedidos

select sum(quantidade * preco) as ValorTotal from pedidos as pe join produtos as pr on pe.produto_id = pr.id;

--  Calcular a média de preço dos produtos

select avg(preco) as media from produtos;

--  Listar todos os clientes e seus pedidos

select nome, produto_id, data_pedido from clientes as c join pedidos as p on c.id = p.cliente_id;

--  Listar todos os pedidos e seus produtos, incluindo pedidos sem produtos

select * from pedidos as pd left join produtos as pr on pr.id = pd.produto_id;

--  Listar os produtos mais caros primeiro

select nome, preco from produtos order by preco desc;

--  Listar os produtos com menor estoque

select nome, estoque from produtos order by estoque asc;

--  Contar quantos pedidos foram feitos por cliente

select cliente_id, quantidade from pedidos where cliente_id !=0;

--  Contar quantos produtos diferentes foram vendidos

select nome, quantidade from produtos as pr join pedidos as pd on pr.id = pd.produto_id;

--  Mostrar os clientes que não realizaram pedidos

select nome, produto_id from clientes as c left join pedidos as p on c.id = p.cliente_id;

--  Mostrar os produtos que nunca foram vendidos

select nome, quantidade from produtos as pr left join pedidos as pd on pr.id = pd.produto_id;

--  Contar o número de pedidos feitos por dia

select data_pedido, nome, count(data_pedido) from pedidos as pd join produtos as pr on pr.id = pd.produto_id group by nome, data_pedido;

--  Listar os produtos mais vendidos

select nome, quantidade from pedidos as pd join produtos as pr on pr.id = pd.produto_id order by quantidade desc;

--  Encontrar o cliente que mais fez pedidos

select nome, quantidade from clientes as c join pedidos as p on c.id = p.cliente_id order by quantidade desc limit 1;

--  Listar os pedidos e os clientes que os fizeram, incluindo pedidos sem clientes

select nome, produto_id from pedidos as p left join clientes as c on c.id = p.cliente_id order by produto_id;

--  Listar os produtos e o total de vendas por produto

select nome, quantidade, count(quantidade) from produtos as pr join pedidos as pd on pr.id = pd.produto_id group by quantidade, nome;

--  Calcular a média de quantidade de produtos por pedido

select avg(quantidade), nome from pedidos as pd join produtos as pr on pr.id = pd.produto_id group by nome;

--  Listar os pedidos ordenados por data (mais recentes primeiro)

select data_pedido from pedidos order by data_pedido desc;

--  Contar quantos clientes possuem telefone cadastrado

select count(nome), count(telefone) from clientes;

--  Encontrar o cliente que gastou mais dinheiro em pedidos.

	select c.nome, sum(quantidade * preco) from pedidos as pd join produtos as pr on pr.id = pd.produto_id join clientes as c on c.id = pd.cliente_id group by c.nome limit 1;

-- Listar os 5 produtos mais vendidos.

select produto_id, quantidade from pedidos order by quantidade desc limit 5;

-- Listar os clientes que já fizeram pedidos e o número de pedidos de cada um.

select nome, count(p.id) from clientes as c join pedidos as p on c.id = p.cliente_id group by nome, p.id;

-- Encontrar a data com mais pedidos realizados

select data_pedido, quantidade from pedidos order by quantidade desc limit 1;

-- Calcular a média de valor gasto por pedido

select avg(quantidade * preco) from pedidos as pd join produtos as pr on pd.produto_id = pr.id;
